# Generated by Django 5.2 on 2025-04-25 06:00

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nomi')),
                ('description', models.TextField(verbose_name='Tavsif')),
                ('type', models.CharField(choices=[('videos_watched', 'Videolarni tomosha qilish'), ('tests_passed', 'Testlardan o‘tish'), ('perfect_score', 'Mukammal natija'), ('login_streak', 'Ketma-ket kirishlar'), ('category_complete', 'Kategoriya yakunlandi'), ('level_reached', 'Darajaga erishildi')], max_length=30, verbose_name='Turi')),
                ('icon', models.ImageField(upload_to='achievement_icons/', verbose_name='Belgi')),
                ('required_value', models.IntegerField(verbose_name='Talab qilinadigan qiymat')),
                ('experience_reward', models.IntegerField(default=50, verbose_name='Tajriba mukofoti')),
                ('is_secret', models.BooleanField(default=False, verbose_name='Yashirin yutuq')),
            ],
            options={
                'verbose_name': 'Yutuq',
                'verbose_name_plural': 'Yutuqlar',
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issued_at', models.DateTimeField(auto_now_add=True, verbose_name='Berilgan sana')),
                ('certificate_id', models.CharField(max_length=50, unique=True, verbose_name='Sertifikat raqami')),
                ('certificate_file', models.FileField(blank=True, null=True, upload_to='certificates/', verbose_name='Sertifikat fayli')),
            ],
            options={
                'verbose_name': 'Sertifikat',
                'verbose_name_plural': 'Sertifikatlar',
                'ordering': ['-issued_at'],
            },
        ),
        migrations.CreateModel(
            name='FavoritePost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='Qo‘shilgan vaqt')),
            ],
            options={
                'verbose_name': 'Sevimli post',
                'verbose_name_plural': 'Sevimli postlar',
                'ordering': ['-added_at'],
            },
        ),
        migrations.CreateModel(
            name='LearningProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_viewed', models.DateTimeField(auto_now=True, verbose_name='Oxirgi ko‘rish')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Kategoriya tugallandi')),
            ],
            options={
                'verbose_name': 'O‘rganish jarayoni',
                'verbose_name_plural': 'O‘rganish jarayonlari',
            },
        ),
        migrations.CreateModel(
            name='LevelUpEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_level', models.IntegerField(verbose_name='Oldingi daraja')),
                ('new_level', models.IntegerField(verbose_name='Yangi daraja')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Daraja oshirilgan vaqt')),
            ],
            options={
                'verbose_name': 'Daraja oshirish',
                'verbose_name_plural': 'Daraja oshirishlar',
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DateTimeField(auto_now_add=True, verbose_name='Olingan vaqt')),
                ('current_value', models.IntegerField(default=0, verbose_name='Joriy qiymat')),
            ],
            options={
                'verbose_name': 'Foydalanuvchi yutug‘i',
                'verbose_name_plural': 'Foydalanuvchi yutuqlari',
                'ordering': ['-earned_at'],
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('login', 'Tizimga kirish'), ('logout', 'Tizimdan chiqish'), ('view_post', 'Postni ko‘rish'), ('view_video', 'Videoni ko‘rish'), ('profile_update', 'Profilni yangilash'), ('favorite_add', 'Sevimlilarga qo‘shish'), ('favorite_remove', 'Sevimlilardan o‘chirish')], max_length=20, verbose_name='Faollik turi')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Vaqti')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP manzil')),
                ('details', models.JSONField(blank=True, null=True, verbose_name='Qo‘shimcha ma’lumotlar')),
                ('duration', models.PositiveIntegerField(default=0, help_text='Faollik davomiyligi (daqiqalarda)', verbose_name='Davomiyligi')),
            ],
            options={
                'verbose_name': 'Foydalanuvchi faolligi',
                'verbose_name_plural': 'Foydalanuvchi faolliklari',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('админ', 'Admin'), ('бухгалтер', 'Buxgalter'), ('естокада', 'Estakada'), ('финансист', 'Finansist')], default='бухгалтер', max_length=20, verbose_name='Foydalanuvchi roli')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/', verbose_name='Profil rasmi')),
                ('bio', models.TextField(blank=True, max_length=500, verbose_name="Qisqacha ma'lumot")),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='Telefon raqami')),
                ('experience_points', models.IntegerField(default=0, verbose_name='Tajriba ballari')),
                ('level', models.IntegerField(default=1, verbose_name='Daraja')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
